this program was written in python 3.4.4

to install the program run "Install BibFast.bat" or type: "pip install editable . "in cmd opened in administrator mode in the local folder

access point for the cli program is 'bib'



list of commands are:
========================================================================================================================
create_project(name):
"""
creates new project named <name> with active status
command interface:  "bib create_project <name>"
example:            "bib create_project donald"
"""
========================================================================================================================
project_status_set(project_id, status):
"""
changes project with id #<project_id> status to <status>, status must be in ('active','projected','archived')
command interface:  "bib project_status_set <project_id> <status>"
example:            "bib project_status_set 1 projected
"""
========================================================================================================================
delete_project(project_id):
"""
delete project with id #<project_id>, removes references from citations
command interface:  "bib delete_project <project_id>"
example:            "bib delete_project 1"
"""
========================================================================================================================
project_update(project_id, name, status):
"""
update project with id #<project_id> with the following: <name>, <status>; status must be in ('active','projected','archived')
command interface:  "bib project_update <project_id> --name <name> --status <status>"
example:            "bib project_update 1 --name donald --active"
"""
========================================================================================================================
print_projects():
"""
prints all projects
command interface:  "bib print_projects"
"""
========================================================================================================================
password_init():
"""
initializes password after login to '123456', uses token from firebase uid, requires relogin
command interface:  "bib password_init"
"""
========================================================================================================================
set_password(password):
"""
changes password after login to <password>, password must be atleast 6 digits long, uses token from firebase uid, requires relogin
command interface:  "bib set_password <password>"
example:            "bib set_password 1234567"
"""
========================================================================================================================
create_citation(project_id):
"""
creates empty citaiton linked to project with <project_id>, sets it's status as active
command interface:  "bib create_citation <project_id>"
example:            "bib create_citation 1"
"""
========================================================================================================================
citation_add_contributor(citation_id, type, name):
"""
adds contributor to a citation with id #<citation_id>,
with <type> in ('author', 'editor', 'compiler', 'translator'),
and <name> contributor's <name> must be in contributor list
command interface:  "bib citation_add_contributor <citation_id> <type> <name>"
example:            "bib citation_add_contributor 1 author 'albert einstein'"
"""
========================================================================================================================
add_contributor(name):
"""
adds contributor's <name> to contributor list
command interface:  "bib add_contributor <name>"
example:            "bib add_contributor 'albert einstein'"
"""
========================================================================================================================
citation_remove_contributor(citation_id, type):
"""
removes contributor of type=<type> from citation with id #<citation_id>
command interface:  "bib citation_remove_contributor <citation_id> <type>"
example:            "bib citation_remove_contributor 1 'author'"
"""
========================================================================================================================
citation_set_type(citation_id, type):
"""
changes citation with id#<citation_id> type to <type> in ('book', 'chapter', 'magazine', 'newspaper', 'journal', 'website'),
creates all the fields that go along with the corresponding type
command interface:  "bib citation_set_type <citation_id> <type>"
example:            "bib citation_set_type 1 book"
"""
========================================================================================================================
citation_fill_data(citation_id):
"""
lets the user input all the fields of the citation with id #<citation_id>, must be done after citation_set_type
will request user input for each field with explanation of the field
command interface:  "bib citation_fill_data <citation_id>"
example:            "bib citation_fill_data 1"
"""
========================================================================================================================
citation_add_project(citation_id, project_id):
"""
adds to citation with id #<citation_id> a reference to project with id #<project_id> in 'active' status
command interface:  "bib citation_add_project <citation_id> <project_id>"
example:            "bib citation_add_project 1 1"
"""
========================================================================================================================
citation_change_project_status(citation_id, project_id, project_status):
"""
changes citation's project's status to <status> in ('active','inactive')
command interface:  "bib citation_change_project_status <citation_id> <project_id> <project_status>"
example:            "bib citation_change_project_status 1 1 active"
"""
========================================================================================================================
citation_remove_project(citation_id, project_id):
"""
removes project from citation
command interface:  "bib citation_remove_project <citation_id> <project_id>"
example:            "bib citation_remove_project 1 1"
"""
========================================================================================================================
project_export_citations(project_id, style, filename):
"""
exports all citations in project with id #<project_id> by required <style>
option to choose filename, default is exported.txt
command interface:  "bib project_export_citations <project_id> --style <style> --filename <filename>"
example:            "bib project_export_citations 1 --style apa --filename haha"
"""
========================================================================================================================
get_styles(req, limit):
"""
lets user see possible easybib format styles, by default show most popular, <req> in ('all','popular')
command interface:  "bib get_styles --req <req>"
example:            "bib get_styles --req all"
"""
========================================================================================================================
project_export_citations_each_style(project_id, filename):
"""
lets user select each citation's format style by input from user for each
option to choose filename, by default 'export.txt'
command interface:  "bib project_export_citations_each_style <project_id> --filename <filename>"
example:            "bib project_export_citations_each_style 1 --filename new"
"""
========================================================================================================================
print_changes:
"""
prints all changes made to firebase
command interface:  "bib print_changes"
"""
========================================================================================================================